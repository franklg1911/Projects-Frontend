/* Google fonts - poppins */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap');

* {
    margin: 0;
    padding: 0;
    /* Facilita el diseño de responsive , los elementos son faciles de manejar y predecibles en cuanto a tamaño y espaciado */
    box-sizing: border-box;
    font-family: "Poppins", sans-serif;
}

.container {
    height: 100vh;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #90d2d8;
    /* Establece un espacio de 30px entre las columnas de un contenedor */
    column-gap: 30px;
}

.form {
    /* Permite colocar un elemento en una posición específica dentro de su contenedor relativo más cercano, es útil para crear diseños flexibles
    .Se posicionará de manera absoluta dentro de su contenedor de referencia
    Absoluta : se posiciona en relación con su contenedor de referencia mas cercano que no tenga position: static, si no hay tal contenedor , se posicionará en relación con el viewport (ventana visible del navegador) */
    position: absolute;
    max-width: 430px;
    width: 100%;
    padding: 30px;
    border-radius: 6px;
    background: #fff;
}

header {
    font-size: 28px;
    font-weight: 600;
    color: #232836;
    text-align: center;
}

form {
    margin-top: 30px;
}

.form .field {
    /* Se convierte en un contenedor de referencia para los elementos hijos con position: absolute, esto significa que cualquier elemento hijo se posicionará en relación a este elemento con position:relative
    Relativa: Se posiciona en relación con su posición original en el flujo normal del documento */
    position: relative;
    height: 50px;
    width: 100%;
    margin-top: 20px;
    border-radius: 6px;
}

.field input,
.field button {
    height: 100%;
    width: 100%;
    border: none;
    font-size: 16px;
    font-weight: 400;
    border-radius: 6px;
}

.field input {
    outline: none;
    padding: 0 15px;
    border: 1px solid #CACACA;
}

/* Focus es un pseudo-clase que aplica al input cuando está en el foco, ocurre cuando un usuario hace click en el campo de entrada */
.field input:focus {
    /* Establece el grosor de la línea en la parte inferior del borde de un elemento. */
    border-bottom-width: 2px;
}

.field button {
    color: #fff;
    /* Establece el color de fondo */
    background-color: #f6a6b2;
    /* Aplica una transición , donde all indica que la transición se aplicará a todas las propiedades del elemento que cambien, 0.3s es el valor que define la duración de transición, ease es una función de temporización predefinida que comienza despacio, acelera a la mitad de camino y luego se desacelera al final. */
    transition: all 0.3s ease;
    cursor: pointer;
}

.field button:hover {
    background-color: #f37284;
}

.form-link {
    text-align: center;
    margin-top: 10px;
}

.form-link span,
.form-link a { 
    font-size: 14px;
    font-weight: 500;
    color: #232836
}

.form a {
    color: #90d2d8;
    text-decoration: none;
}

.form-content a:hover {
    text-decoration: underline;
}
.line {
    position: relative;
    height: 1px;
    width: 100%;
    margin: 36px 0;
    background-color: #d4d4d4;
}

/* Este pseudo-elemento se utiliza para insertar contenido antes del contenido real de un elemento */
.line::before {
    /* Define el contenido que se insertará antes del contenido real del elemento */
    content: 'O';
    /* Posiciona el elemento de manera absoluta con su contenedor posicionado mas cercano, si no hay un contenedor se posiciona en relación con el elemento raíz (html) */
    position: absolute;
    top: 50%;
    left: 50%;
    /* Se utiliza para ajustar la posición del pseudoelemento , mueve hacia arriba y izquierda de un 50% de su propio ancho y alto */
    transform: translate(-50%, -50%);
    background-color: #fff;
    /* Se establece un relleno de 15px a la izquierda y 0 a la derecha */
    padding: 0 15px;
}

.media-options a {
    /* Establece que el elemento "a" se comportara como un contenedor flexbox. Esto significa que se habilita el modelo de diseño flexible */
    display: flex;
    align-items: center;
    /* Esta propiedad alinea los elementos hijos del contenedor flexbox horizontalmente al centro */
    justify-content: center;
}

a.facebook {
    color: #fff;
    background-color: #4267b2;
}

a.facebook .facebook-icon {
    height: 28px;
    width: 28px;
    color: #0171d3;
    font-size: 20px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #fff;
}

.facebook-icon,
img.google-img {
    /* Posiciona el elemento de manera absoluta en relación con su contenedor posicionado mas cercano */
    position: absolute;
    top: 50%;
    left: 15px;
    /* Se usa para aplicar las transformaciones al elemento, mueve al elemento hacia arriba un 50% de su propia altura */
    transform: translateY(-50%);
}

img.google-img {
    height: 20px;
    width: 20px;
    /* Se usa para especificar cómo se debe ajustar al contenido de un elemento remplazable (como una imagen) dentro de su contenedor */
    object-fit: cover;
}

a.google {
    border: 1px solid #CACACA;
}

a.google span {
    font-weight: 500;
    /* Establece la opacidad del elemento al 60%, significa que el elemento será parcialmente transparente*/
    opacity: 0.6;
    color: #232836;
}

/* Responsive */
@media screen and (max-width: 400px) { 
    .form {
        padding: 20px 10px;
    }
}